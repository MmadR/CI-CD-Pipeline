trigger:
  - master
  - develop
  - releases/*
  - hotfix/*
  - feature/*

pr:
  - master
  - develop
  - releases/*
  - feature/*

variables:
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release')]
  isFeature: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/feature')]
  isHotfix: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix')]
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]

pool:
  vmImage: "ubuntu-16.04"

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - bash: echo "Build"
  - stage: Unit_Test
    dependsOn: Build
    jobs:
      - job: JUnit_Test
        steps:
          - bash: echo "JUnit Test"
      - job: JUnit_Test
        steps:
          - bash: echo "Jest Test"

  - stage: Integration_Test
    dependsOn: Unit_Test
    condition: and(succeeded(), ne(variables.isHotfix, true), ne(variables.isFeature, true))
    jobs:
      - job: Test
        steps:
          - bash: echo "JUnit Integration Test"
      - job: JUnit_Test
        steps:
          - bash: echo "UII Functional Test"

  - stage: Sonar_Quality_Gate
    dependsOn: Integration_Test
    condition: and(succeeded(), ne(variables.isHotfix, true), ne(variables.isFeature, true))
    jobs:
      - job: Test
        steps:
          - bash: echo "Sonarqube analysis"
          - bash: echo "Sonarqube quality gate check"
